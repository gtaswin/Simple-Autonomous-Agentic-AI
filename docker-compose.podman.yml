version: '3.8'

# Podman-optimized compose file
# Usage: podman-compose -f docker-compose.podman.yml up -d

services:
  # Main AI Agent Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379
      - QDRANT_URL=http://qdrant:6333
      - OPENAI_API_KEY=${OPENAI_API_KEY:-demo}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-demo}
      - GEMINI_API_KEY=${GEMINI_API_KEY:-demo}
      - GROQ_API_KEY=${GROQ_API_KEY:-demo}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL:-http://host.containers.internal:11434}
      - ENVIRONMENT=${ENVIRONMENT:-development}
      - DEBUG=${DEBUG:-true}
    volumes:
      - ./data:/app/data
      - ./backend:/app
      - ./backend/config:/app/config
    depends_on:
      - redis
      - qdrant
    restart: unless-stopped

  # Next.js Frontend Dashboard  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000
      - NODE_ENV=${NODE_ENV:-development}
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    restart: unless-stopped

  # Redis Stack for working memory + short-term vector memory with TTL
  redis:
    image: redis/redis-stack:latest
    ports:
      - "6379:6379"  # Redis port
      - "8001:8001"  # RedisInsight web UI
    volumes:
      - ./data/redis:/data
    environment:
      - REDIS_ARGS=--appendonly yes --maxmemory 1gb --maxmemory-policy allkeys-lru
      - REDISEARCH_ARGS=
      - REDISJSON_ARGS=
    restart: unless-stopped

  # Qdrant for long-term vector memory storage
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=INFO
    volumes:
      - ./data/qdrant:/qdrant/storage
    restart: unless-stopped